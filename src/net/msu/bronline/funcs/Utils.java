package net.msu.bronline.funcs;

import net.msu.bronline.network.NetworkDevices;

import java.awt.*;

import static java.lang.Thread.sleep;
import static net.msu.bronline.guis.Present.getPresent;

public class Utils {
    public static int score_win = 6;
    public static int allowed_start = 3;
    public static int getInsidePosition(int p, int dp, double percent){
        return (int)(p + ((dp-p)*(percent/100)));
    }
    public static Color getColor(int id){
        switch (id){
            case 1:
                return new Color(0x1C69FF);
            case 2:
                return Color.MAGENTA;
            case 3:
                return Color.RED;
            case 4:
                return Color.YELLOW;
            case 5:
                return Color.cyan;
            case 6:
                return Color.GREEN;
            case 7:
                return Color.BLUE;
            case 8:
                return new Color(0xC6FF2A);
            default:
                return Color.WHITE;
        }
    }


    public static void runServerFinder(){
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (getPresent().getGame_status() == 2){
                    NetworkDevices.getHostPinged();
                }
            }
        }).start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (getPresent().getGame_status() == 2){
                    try {
                        NetworkDevices.clearPingList();
                        sleep(1500);
                        NetworkDevices.updateHost();
//                        sleep(500);
                    } catch (InterruptedException ex) {
                        throw new RuntimeException(ex);
                    }
                }
            }
        }).start();
    }

    public static double getMathM(double[] xy1, double[] xy2){
        return (xy2[1] - xy1[1])/(xy2[0] - xy1[0]);
    }

    public static double getMathM(int[] xy1, int[] xy2){
        return ((double) xy2[1] - xy1[1])/((double)xy2[0] - xy1[0]);
    }

    public static double geMathLinEq(int[] xy1, int[] xy2, int[] xy3){
        /*
            y1-y2 = m(x1-x2)
            my = (xy2[1] - xy1[1])
            mx = (xx2[0] - xx1[0])

            y1-y2 = my * (x1-x2)
                    mx

            (mx*y1)-(mx*y2) = (my*x1)+(my*x2)

            ((my*-1)*x1)+(mx*y1)-((my*x2)-(mx*y2))
         */
        int x1 = xy1[0], x2 = xy2[0];
        int y1 = xy1[1], y2 = xy2[1];
        int my = (xy2[1] - xy1[1]);
        int mx = (xy2[0] - xy1[0]);
        int x = xy3[0], y = xy3[1];

        double res = (my*x)-((my*x2)-(mx*y2))-(mx*y);
//        double res = ((float)((my*x2)-(mx*y2))/((my*x)+(mx*y)));
        return res;
    }

    public static int[][][] colld_data = {
            {{556,112},{575,198},{662,181},{643,93}},
            {{17,53},{23,140},{430,109},{423,22}},
            {{481,47},{482,90},{508,89},{507,46}},
            {{664,110},{675,193},{862,164},{848,81}},
            {{1175,37},{1192,120},{1358,85},{1339,2}},
            {{1372,15},{1389,99},{1555,63},{1541,0}},
            {{1844,175},{1894,245},{1930,220},{1880,150}},
            {{1718,192},{1805,331},{1868,292},{1780,154}},
            {{1641,265},{1729,403},{1791,365},{1703,226}},
            {{1623,404},{1689,498},{1780,515},{1792,434}},
            {{1623,406},{1578,656},{1674,589},{1689,499}},
            {{1673,590},{1579,656},{1749,687},{1763,607}},
            {{1860,674},{1896,769},{1970,740},{1934,647}},
            {{1563,513},{1552,553},{1576,561},{1587,519}},
            {{1610,771},{1618,793},{1655,782},{1648,761}},
            {{1651,864},{1657,889},{1700,880},{1695,855}},
            {{38,320},{32,382},{184,397},{190,335}},
            {{156,402},{154,428},{199,431},{200,405}},
            {{643,344},{626,426},{810,464},{827,382}},
            {{864,369},{852,447},{951,464},{963,384}},
            {{1015,395},{1000,487},{1230,526},{1246,434}},
            {{1279,401},{1259,532},{1421,558},{1441,426}},
            {{1456,283},{1488,313},{1505,296},{1475,265}},
            {{1456,341},{1497,360},{1508,338},{1470,317}},
            {{280,756},{280,801},{307,800},{306,757}},
            {{322,770},{323,814},{349,814},{348,770}},
            {{511,608},{508,694},{676,700},{679,615}},
            {{704,686},{701,771},{870,777},{871,691}},
            {{857,780},{854,865},{1023,872},{1025,786}},
            {{1140,854},{1190,905},{1369,724},{1319,674}},
            {{1042,773},{1043,817},{1069,816},{1068,772}},
            {{1078,792},{1081,836},{1107,834},{1104,791}},
            {{1063,963},{1122,1015},{1189,943},{1132,888}},
            {{708,871},{680,954},{1071,1074},{1096,992}},
            {{1075,1111},{1062,1136},{1100,1157},{1113,1133}},
            {{1138,1144},{1209,1324},{1289,1293},{1220,1113}},
            {{1376,1204},{1377,1335},{1480,1333},{1478,1204}},
            {{1269,1361},{1270,1493},{1373,1493},{1372,1360}},
            {{1319,1599},{1342,1614},{1365,1574},{1343,1562}},
            {{1356,1703},{1438,1758},{1560,1572},{1478,1518}},
            {{1569,1654},{1632,1686},{1744,1458},{1679,1426}},
            {{1680,1345},{1661,1396},{1775,1438},{1794,1389}},
            {{1707,1674},{1707,1762},{1795,1761},{1794,1675}},
            {{1866,1500},{1864,1544},{1890,1544},{1892,1501}},
            {{1864,1701},{1863,1745},{1890,1746},{1891,1702}},
            {{571,1772},{583,1797},{624,1781},{614,1758}},
            {{135,1820},{161,1896},{439,1803},{412,1727}},
            {{196,1729},{217,1793},{332,1754},{311,1691}},
            {{0,1606},{0,1818},{249,1618},{148,1492}}, //ตึกเบี้ยวๆ
            {{324,1271},{285,1408},{347,1515},{408,1295}},
            {{191,1382},{168,1467},{346,1518},{285,1409}},
            {{249,988},{235,1147},{360,1159},{374,1000}},
            {{0,863},{0,962},{44,969},{62,875}},
            {{118,866},{120,893},{163,889},{161,863}},
            {{57,1066},{80,1078},{101,1038},{77,1026}},
            {{17,1334},{34,1375},{60,1364},{42,1324}},
            {{141,1263},{150,1308},{176,1304},{169,1259}},
            {{118,1305},{125,1349},{150,1345},{143,1302}},
            {{96,1360},{114,1401},{137,1390},{119,1351}},
            {{74,1396},{92,1437},{118,1426},{100,1386}},
    };

    public static boolean dev = false;
}
